# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `ma` gem.
# Please instead update this file by running `bin/tapioca gem ma`.

# source://ma//lib/ma/version.rb#1
module Ma
  class << self
    # source://ma//lib/ma.rb#13
    def publisher; end

    # source://ma//lib/ma.rb#9
    def subscriber(*args); end
  end
end

# source://ma//lib/ma.rb#7
class Ma::Error < ::StandardError; end

# source://ma//lib/ma/event.rb#4
class Ma::Event < ::OpenStruct
  # @return [Event] a new instance of Event
  #
  # source://ma//lib/ma/event.rb#5
  def initialize(*args); end
end

# source://ma//lib/ma/publisher.rb#4
class Ma::Publisher < ::Module
  # source://ma//lib/ma/publisher.rb#12
  def included(base); end
end

# source://ma//lib/ma/publisher.rb#5
module Ma::Publisher::Overrides
  # source://ma//lib/ma/publisher.rb#6
  def broadcast(event); end
end

# source://ma//lib/ma/subscriber.rb#4
class Ma::Subscriber < ::Module
  # @return [Subscriber] a new instance of Subscriber
  #
  # source://ma//lib/ma/subscriber.rb#9
  def initialize(*args); end

  # source://ma//lib/ma/subscriber.rb#16
  def included(base); end

  # Returns the value of attribute options.
  #
  # source://ma//lib/ma/subscriber.rb#7
  def options; end
end

# source://ma//lib/ma/subscriber.rb#23
module Ma::Subscriber::ClassMethods
  # source://ma//lib/ma/subscriber.rb#24
  def on(event_class, &block); end
end

# source://ma//lib/ma/subscriber.rb#5
Ma::Subscriber::Prefix = T.let(T.unsafe(nil), TrueClass)

# source://ma//lib/ma/version.rb#2
Ma::VERSION = T.let(T.unsafe(nil), String)
